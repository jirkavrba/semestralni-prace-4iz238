stages:
  - prepare
  - validate
  - transform
  - publish

prepare-tooling-dockerfile:
  stage: prepare
  image: docker:stable
  services:
    - docker:dind
  only:
    changes:
      - tooling/Dockerfile
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t registry.gitlab.com/jirkavrba/semestralni-prace-4iz238/tooling - < ./tooling/Dockerfile
    - docker push registry.gitlab.com/jirkavrba/semestralni-prace-4iz238/tooling

validate-xml-schema:
  stage: validate
  image: "registry.gitlab.com/jirkavrba/semestralni-prace-4iz238/tooling:latest"
  script:
    - java -jar /opt/crux/crux.jar decks.xml

validate-xml-schematron:
  stage: validate
  image: "registry.gitlab.com/jirkavrba/semestralni-prace-4iz238/tooling:latest"
  script:
    - java -jar /opt/crux/crux.jar -s ./decks.sch decks.xml

transform-xml-to-html:
  stage: transform
  image: "registry.gitlab.com/jirkavrba/semestralni-prace-4iz238/tooling:latest"
  needs:
    - validate-xml-schema
    - validate-xml-schematron
  script:
    - rm -f output/*.html
    - java -cp /opt/saxon/saxon-he-11.4.jar net.sf.saxon.Transform -xsl:xslt/html.xsl -s:decks.xml -o:output/index.html --allowSyntaxExtensions:off commit=$CI_COMMIT_SHORT_SHA
  artifacts:
    expire_in: 1 hour
    paths:
      - output

transform-xml-to-pdf:
  stage: transform
  image: "registry.gitlab.com/jirkavrba/semestralni-prace-4iz238/tooling:latest"
  needs:
    - validate-xml-schema
    - validate-xml-schematron
  script:
    - rm -f output/*.pdf
    - fop -xml ./decks.xml -xsl ./xslt/pdf.xsl -pdf ./output/decks.pdf -param root "$(pwd)/xslt" -param commit $CI_COMMIT_SHORT_SHA -c ./xslt/config/pdf.config.xml
  artifacts:
    expire_in: 1 hour
    paths:
      - output

create-archive:
  stage: publish
  image: alpine
  needs:
    - transform-xml-to-pdf
    - transform-xml-to-html
  script:
    - apk add zip --update
    - mkdir -p result
    - mkdir -p result/html
    - mkdir -p result/pdf
    - cp ./output/*.html ./result/html
    - cp ./output/decks.pdf ./result/pdf
    - cp -r ./output/css ./result/html/css
    - cp -r ./output/img ./result/html/img
    - cp -r ./xslt ./result
    - cp decks.xml ./result/decks.xml
    - cp decks.xsd ./result/decks.xsd
    - cp decks.sch ./result/decks.sch
    - cd result
    - zip vrbj04.zip -r ./*
    - mv vrbj04.zip ..
  artifacts:
    expire_in: "1 month"
    paths:
      - vrbj04.zip
    
pages:
  stage: publish
  needs:
    - transform-xml-to-html
    - transform-xml-to-pdf
  script:
    - cp -r output public
  artifacts:
    paths:
      - public
  